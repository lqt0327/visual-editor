[{"D:\\毕业设计\\毕业设计\\graduationProject\\src\\index.js":"1","D:\\毕业设计\\毕业设计\\graduationProject\\src\\reportWebVitals.js":"2","D:\\毕业设计\\毕业设计\\graduationProject\\src\\App.js":"3","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\index.js":"4","D:\\毕业设计\\毕业设计\\graduationProject\\src\\routes\\index.js":"5","D:\\毕业设计\\毕业设计\\graduationProject\\src\\layouts\\BlankLayout.jsx":"6","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\reducers\\index.js":"7","D:\\毕业设计\\毕业设计\\graduationProject\\src\\application\\Home\\index.jsx":"8","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\reducers\\templatereducer.js":"9","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\reducers\\pagereducer.js":"10","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\reducers\\panelreducer.js":"11","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\index.js":"12","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\index.js":"13","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\addComponents\\index.jsx":"14","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\footer\\index.jsx":"15","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\header\\index.jsx":"16","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\preview\\index.jsx":"17","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\page\\index.jsx":"18","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\index.jsx":"19","D:\\毕业设计\\毕业设计\\graduationProject\\src\\api\\request.js":"20","D:\\毕业设计\\毕业设计\\graduationProject\\src\\utils\\tools\\config.js":"21","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\actions\\index.js":"22","D:\\毕业设计\\毕业设计\\graduationProject\\src\\utils\\help\\index.js":"23","D:\\毕业设计\\毕业设计\\graduationProject\\src\\utils\\compile\\index.js":"24","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\index.js":"25","D:\\毕业设计\\毕业设计\\graduationProject\\src\\api\\config.js":"26","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\addComponents\\generalTemplate\\index.jsx":"27","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\actions\\pageaction.js":"28","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\actions\\panelaction.js":"29","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\actions\\templateaction.js":"30","D:\\毕业设计\\毕业设计\\graduationProject\\src\\utils\\help\\props.js":"31","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\index.js":"32","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\tab1\\index.jsx":"33","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\operationList\\index.jsx":"34","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\newList\\index.jsx":"35","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\carousel\\index.jsx":"36","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\tab2\\index.jsx":"37","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\banner\\index.jsx":"38","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\gridList\\index.jsx":"39","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\normalList\\index.jsx":"40","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\cardList\\index.jsx":"41","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\rowList\\index.jsx":"42","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\title\\index.jsx":"43","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\quote\\index.jsx":"44","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\img\\index.jsx":"45","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\parleft\\index.jsx":"46","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\faq\\index.jsx":"47","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\cutList\\index.jsx":"48","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\button\\index.jsx":"49","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\footer\\index.jsx":"50","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\step\\index.jsx":"51","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\upload\\uploads.jsx":"52","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\tabs\\index.jsx":"53","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\tabs\\entryTab.jsx":"54","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\tags\\index.jsx":"55","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\upload\\index.jsx":"56","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\carousel\\index.jsx":"57","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\com_step\\index.jsx":"58","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\com_button\\index.jsx":"59","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\gridList2\\index.jsx":"60","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\com_footer\\index.jsx":"61","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\com_faq\\index.jsx":"62","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\quote\\index.jsx":"63","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\com_img\\index.jsx":"64","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\gridList\\index.jsx":"65","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\newList\\index.jsx":"66","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\paragraph\\index.jsx":"67","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\normalList\\index.jsx":"68","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\title\\index.jsx":"69","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\cutList\\index.jsx":"70","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\banner\\index.jsx":"71","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\operationList\\index.jsx":"72","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\rowList\\index.jsx":"73","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\link_address\\index.jsx":"74","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\header\\index.jsx":"75","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\loucengbiaoti\\index.jsx":"76","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\advert_list\\index.jsx":"77","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\loucengjiange\\index.jsx":"78","D:\\毕业设计\\毕业设计\\graduationProject\\src\\application\\User\\index.jsx":"79","D:\\毕业设计\\毕业设计\\graduationProject\\src\\application\\Login\\index.jsx":"80","D:\\毕业设计\\毕业设计\\graduationProject\\src\\application\\Register\\index.jsx":"81","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\actions\\useraction.js":"82","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\reducers\\userreducer.js":"83"},{"size":637,"mtime":1620001706434,"results":"84","hashOfConfig":"85"},{"size":375,"mtime":1620001706434,"results":"86","hashOfConfig":"85"},{"size":336,"mtime":1620222128529,"results":"87","hashOfConfig":"85"},{"size":317,"mtime":1620001706454,"results":"88","hashOfConfig":"85"},{"size":1427,"mtime":1620265786315,"results":"89","hashOfConfig":"85"},{"size":765,"mtime":1620267777795,"results":"90","hashOfConfig":"85"},{"size":369,"mtime":1620266634964,"results":"91","hashOfConfig":"85"},{"size":1307,"mtime":1620264387428,"results":"92","hashOfConfig":"85"},{"size":358,"mtime":1620001706454,"results":"93","hashOfConfig":"85"},{"size":748,"mtime":1620001706454,"results":"94","hashOfConfig":"85"},{"size":516,"mtime":1620001706454,"results":"95","hashOfConfig":"85"},{"size":163,"mtime":1620001706396,"results":"96","hashOfConfig":"85"},{"size":171,"mtime":1620001706406,"results":"97","hashOfConfig":"85"},{"size":1438,"mtime":1620001706396,"results":"98","hashOfConfig":"85"},{"size":2118,"mtime":1620001706396,"results":"99","hashOfConfig":"85"},{"size":6450,"mtime":1620219414499,"results":"100","hashOfConfig":"85"},{"size":11549,"mtime":1620180109522,"results":"101","hashOfConfig":"85"},{"size":9511,"mtime":1620219432291,"results":"102","hashOfConfig":"85"},{"size":2325,"mtime":1620001706396,"results":"103","hashOfConfig":"85"},{"size":1740,"mtime":1620219341999,"results":"104","hashOfConfig":"85"},{"size":117,"mtime":1620180046566,"results":"105","hashOfConfig":"85"},{"size":226,"mtime":1620267265166,"results":"106","hashOfConfig":"85"},{"size":1059,"mtime":1620001706454,"results":"107","hashOfConfig":"85"},{"size":651,"mtime":1620001706454,"results":"108","hashOfConfig":"85"},{"size":1056,"mtime":1620001706406,"results":"109","hashOfConfig":"85"},{"size":675,"mtime":1620001706384,"results":"110","hashOfConfig":"85"},{"size":1695,"mtime":1620001706396,"results":"111","hashOfConfig":"85"},{"size":577,"mtime":1620001706454,"results":"112","hashOfConfig":"85"},{"size":231,"mtime":1620001706454,"results":"113","hashOfConfig":"85"},{"size":80,"mtime":1620001706454,"results":"114","hashOfConfig":"85"},{"size":4064,"mtime":1620001706454,"results":"115","hashOfConfig":"85"},{"size":1414,"mtime":1620001706424,"results":"116","hashOfConfig":"85"},{"size":3807,"mtime":1620001706406,"results":"117","hashOfConfig":"85"},{"size":2279,"mtime":1620001706406,"results":"118","hashOfConfig":"85"},{"size":1852,"mtime":1620001706406,"results":"119","hashOfConfig":"85"},{"size":2293,"mtime":1620001706396,"results":"120","hashOfConfig":"85"},{"size":2553,"mtime":1620001706406,"results":"121","hashOfConfig":"85"},{"size":1227,"mtime":1620001706396,"results":"122","hashOfConfig":"85"},{"size":4636,"mtime":1620001706406,"results":"123","hashOfConfig":"85"},{"size":1923,"mtime":1620001706406,"results":"124","hashOfConfig":"85"},{"size":1845,"mtime":1620001706396,"results":"125","hashOfConfig":"85"},{"size":2790,"mtime":1620001706406,"results":"126","hashOfConfig":"85"},{"size":1107,"mtime":1620001706406,"results":"127","hashOfConfig":"85"},{"size":1215,"mtime":1620001706406,"results":"128","hashOfConfig":"85"},{"size":1647,"mtime":1620001706406,"results":"129","hashOfConfig":"85"},{"size":2025,"mtime":1620001706406,"results":"130","hashOfConfig":"85"},{"size":1403,"mtime":1620001706406,"results":"131","hashOfConfig":"85"},{"size":2020,"mtime":1620001706406,"results":"132","hashOfConfig":"85"},{"size":1290,"mtime":1620001706396,"results":"133","hashOfConfig":"85"},{"size":1120,"mtime":1620001706406,"results":"134","hashOfConfig":"85"},{"size":2859,"mtime":1620001706406,"results":"135","hashOfConfig":"85"},{"size":1800,"mtime":1620001706434,"results":"136","hashOfConfig":"85"},{"size":2218,"mtime":1620001706424,"results":"137","hashOfConfig":"85"},{"size":2217,"mtime":1620001706424,"results":"138","hashOfConfig":"85"},{"size":4019,"mtime":1620001706424,"results":"139","hashOfConfig":"85"},{"size":3270,"mtime":1620200167212,"results":"140","hashOfConfig":"85"},{"size":1375,"mtime":1620001706416,"results":"141","hashOfConfig":"85"},{"size":3157,"mtime":1620001706416,"results":"142","hashOfConfig":"85"},{"size":1782,"mtime":1620001706416,"results":"143","hashOfConfig":"85"},{"size":7324,"mtime":1620001706416,"results":"144","hashOfConfig":"85"},{"size":1047,"mtime":1620001706416,"results":"145","hashOfConfig":"85"},{"size":4914,"mtime":1620001706416,"results":"146","hashOfConfig":"85"},{"size":3579,"mtime":1620001706424,"results":"147","hashOfConfig":"85"},{"size":1074,"mtime":1620001706416,"results":"148","hashOfConfig":"85"},{"size":2237,"mtime":1620180046551,"results":"149","hashOfConfig":"85"},{"size":3098,"mtime":1620001706424,"results":"150","hashOfConfig":"85"},{"size":3089,"mtime":1620001706424,"results":"151","hashOfConfig":"85"},{"size":1947,"mtime":1620001706424,"results":"152","hashOfConfig":"85"},{"size":3456,"mtime":1620001706424,"results":"153","hashOfConfig":"85"},{"size":1967,"mtime":1620001706416,"results":"154","hashOfConfig":"85"},{"size":822,"mtime":1620001706416,"results":"155","hashOfConfig":"85"},{"size":2238,"mtime":1620001706424,"results":"156","hashOfConfig":"85"},{"size":2197,"mtime":1620001706424,"results":"157","hashOfConfig":"85"},{"size":1106,"mtime":1620001706424,"results":"158","hashOfConfig":"85"},{"size":1303,"mtime":1620001706424,"results":"159","hashOfConfig":"85"},{"size":825,"mtime":1620001706424,"results":"160","hashOfConfig":"85"},{"size":1340,"mtime":1620001706406,"results":"161","hashOfConfig":"85"},{"size":411,"mtime":1620001706424,"results":"162","hashOfConfig":"85"},{"size":3396,"mtime":1620197905790,"results":"163","hashOfConfig":"85"},{"size":4026,"mtime":1620267837277,"results":"164","hashOfConfig":"85"},{"size":5842,"mtime":1620216363420,"results":"165","hashOfConfig":"85"},{"size":70,"mtime":1620267268976,"results":"166","hashOfConfig":"85"},{"size":352,"mtime":1620267273925,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"7zbqct",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"170"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"170"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"170"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"170"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"170"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"170"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"170"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"170"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"170"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"170"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"170"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"170"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"170"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"170"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"170"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"170"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"170"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"170"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"170"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"170"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"170"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"170"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"170"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"170"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"170"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"348","usedDeprecatedRules":"170"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"170"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"170"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\毕业设计\\毕业设计\\graduationProject\\src\\index.js",[],["363","364"],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\reportWebVitals.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\App.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\index.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\routes\\index.js",["365"],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\layouts\\BlankLayout.jsx",["366"],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\reducers\\index.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\application\\Home\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\reducers\\templatereducer.js",["367"],"import { fromJS } from 'immutable'\r\n\r\nconst defaultState = fromJS({\r\n    currentTemplate: ''     // 添加组件面板 选中\r\n})\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_TEMPLATE':\r\n            return state.set('currentTemplate', action.data);\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\reducers\\pagereducer.js",["368"],"import { fromJS } from 'immutable'\r\n\r\nconst defaultState = fromJS({\r\n    pageData: [],   // 右侧预览 页面数据\r\n    pid: 0,     // 当前选中 页面 id\r\n    pTitle: '',     // 用于 导航栏 中的 标题\r\n    pUpdate: 0  // 用于 左侧页面列表 重渲染\r\n})\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case 'CHANGE_PAGE':\r\n            return state.set('pageData', action.data);\r\n        case 'CHANGE_PID':\r\n            return state.set('pid', action.data);\r\n        case 'CHANGE_PAGE_TITLE':\r\n            return state.set('pTitle', action.data);\r\n        case 'UPDATE_PAGE':\r\n            return state.set('pUpdate', action.data);\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\reducers\\panelreducer.js",["369"],"import { fromJS } from 'immutable'\r\n\r\n// 左侧面板 指定当前操作的面板是哪个\r\nconst defaultState = fromJS({\r\n    currentPanel: ['page'],\r\n    comp_i: 0   // 预览页面 选中组件索引\r\n})\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case 'CHANGE_PANEL':\r\n            return state.set('currentPanel', action.data);\r\n        case 'CHANGE_COMP_I':\r\n            return state.set('comp_i',action.data);\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\index.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\index.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\addComponents\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\footer\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\header\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\preview\\index.jsx",["370","371"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux'\r\nimport { changePanel, addTemplate, changePage, changeCompI } from 'store/actions'\r\nimport { generateInitJson, getUuid } from 'src/utils/help';\r\nimport { Compile } from \"src/utils/compile\";\r\nimport { Button } from 'antd';\r\nimport cx from 'classnames';\r\nimport config from 'server/comp_config/config.json'\r\nimport './style.sass'\r\nimport { url_h5 } from \"../../utils/tools/config\";\r\n\r\n\r\nfunction Preview(props) {\r\n    const tipHeightRef = useRef(null)\r\n\r\n    // 组件添加的位置  索引\r\n    const [index, setIndex] = useState(0)\r\n    // 预览页面 组件将被添加的位置 那个 “添加至此处” 的虚线框\r\n    const [showAdd, setShowAdd] = useState('')\r\n\r\n    // 动态计算右侧工具栏的位置\r\n    const [atipTop, setaTipTop] = useState(0)\r\n    const [atipHeight, setaTipHeight] = useState(0)\r\n    const [tipHeight, setTipHeight] = useState(0)\r\n    const [uuId, setuuId] = useState()\r\n\r\n    const {\r\n        pid,\r\n        comp_i,\r\n        pageData: page,\r\n        currentTemplate,\r\n        changePanelStateDispatch,\r\n        addTemplateDispatch,\r\n        changePageDataDispatch,\r\n        changeCompIDispatch\r\n    } = props\r\n\r\n    // 获取页面最新数据\r\n    const tpldata = JSON.parse(localStorage.getItem(`tpl_${pid}`))\r\n    let pageData = page.size !== 0 ? page.toJS() :\r\n        tpldata ? tpldata : []\r\n\r\n        // 右侧预览页面数据\r\n    const Dustbin = () => {\r\n        ReactDOM.render(<React.Fragment>\r\n            {\r\n                pid !== 0 && pageData.length === 0 ?\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <Button type=\"dashed\" block onClick={() => {\r\n                            changePanelStateDispatch(['AddComponents']);\r\n                            setShowAdd(0 + 'top');\r\n                            setIndex(0)\r\n                        }}>\r\n                            添加组件\r\n                    </Button>\r\n                    </div>\r\n                    : ''\r\n            }\r\n            {\r\n                pageData.map((item, i) => {\r\n                    // 增加数组索引，以便localstorage数据更新时，可以准确定位相关模块\r\n                    item[\"index\"] = i\r\n                    const json = generateInitJson(item[\"comp\"])\r\n                    // 需要的方法 应该在这里统一传递给组件  或  直接写在组件之中\r\n                    Object.assign(json.props, {\r\n                        \"changePanelStateDispatch\": changePanelStateDispatch\r\n                    }, item)\r\n                    return (\r\n                        <div className=\"fengdie-components\" key={i}>\r\n                            <div\r\n                                id=\"fengdie-components-drop-placeholder-top\"\r\n                                style={{\r\n                                    opacity: '1',\r\n                                    display: showAdd === (i + 'top') ? 'flex' : 'none'\r\n                                }}>\r\n                                \"添加至此处\"\r\n                            </div>\r\n                            <button\r\n                                className=\"add-components\"\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                    changePanelStateDispatch(['AddComponents']);\r\n                                    setShowAdd(i + 'top');\r\n                                    setIndex(i)\r\n                                }\r\n                                }>+</button>\r\n                            {Compile(json)}\r\n                            <button\r\n                                className=\"add-components\"\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                    changePanelStateDispatch(['AddComponents']);\r\n                                    setShowAdd(i + 'bottom');\r\n                                    setIndex(i + 1)\r\n                                }\r\n                                }>+</button>\r\n                            <div\r\n                                id=\"fengdie-components-drop-placeholder-bottom\"\r\n                                style={{\r\n                                    opacity: '1',\r\n                                    display: showAdd === (i + 'bottom') ? 'flex' : 'none'\r\n                                }}>\r\n                                \"添加至此处\"\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </React.Fragment>, document.getElementById(\"stage\"))\r\n    }\r\n\r\n    const addTemplate2 = (currentTpl, i) => {\r\n        if (currentTpl) {\r\n            pageData.splice(i, 0, config[currentTpl])\r\n            changePageDataDispatch(pageData, pid)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTipHeight(tipHeightRef.current.offsetHeight)\r\n        // 获取右侧工具栏 距离顶部高度\r\n        const ele = document.getElementById(uuId)\r\n        ele ? setaTipTop(ele.offsetTop - tipHeightRef.current.scrollTop) : setIsShow(false)\r\n        // 获取点击预览页面 背景阴影的高度\r\n        ele ? setaTipHeight(ele.offsetHeight) : setaTipHeight(0)\r\n        addTemplate2(currentTemplate, index)\r\n        addTemplateDispatch('')\r\n\r\n    }, [tipHeight, currentTemplate, uuId, showAdd, comp_i])\r\n\r\n    useEffect(() => {\r\n        Dustbin()\r\n    }, [currentTemplate, showAdd, pageData, pid])\r\n\r\n    // 获取 点击模块的 id\r\n    const clickHandler = (e) => {\r\n        const id = getUuid(e.target)\r\n        if (id) {\r\n            setuuId(id)\r\n            setIsShow(true)\r\n        } else {\r\n            console.warn(\"请检查当前组件是否具有id属性（属性值特征：llscw+....）\")\r\n        }\r\n    }\r\n\r\n    const deleteComp = () => {\r\n        try {\r\n            pageData.splice(comp_i, 1)\r\n            changePanelStateDispatch([\"page\"])\r\n            changePageDataDispatch(pageData, pid)\r\n            setaTipTop(0)\r\n            setaTipHeight(0)\r\n            changeCompI()\r\n        } catch (err) {\r\n            console.log('楼层id为空')\r\n        }\r\n    }\r\n    const [isShow, setIsShow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        // 页面滚动时 隐藏右侧工具栏\r\n        isShow && tipHeightRef.current.addEventListener('scroll', () => {\r\n            setIsShow(false)\r\n        })\r\n    })\r\n\r\n    /**\r\n     * @description 右侧工具栏中 上下移动功能\r\n     * @param {number} i -需要移动的组件的索引\r\n     * @param {number} j -组件  上移（i-1） 下移（i+1）\r\n     */\r\n    const moveComp = (i, j) => {\r\n        // 索引改变  左侧组件配置面板索引也要变\r\n        [pageData[i], pageData[j]] = [pageData[j], pageData[i]]\r\n        changePageDataDispatch(pageData, pid)\r\n        changeCompIDispatch(j)\r\n        Dustbin()\r\n    }\r\n\r\n    return (\r\n        <div className=\"l-preview\">\r\n            <div className=\"l-preview--mask\" onClick={() => setShowAdd('')}></div>\r\n            <div className=\"l-page-path-container\">\r\n                <div className=\"l-page-path\">\r\n                    <div className=\"l-pp-url\"><span>{pid === 0 ? \"\" : url_h5 + `?page=${pid}`}</span></div>\r\n                    <div className=\"l-pp-share\"><i className=\"icon iconfont\">&#xe7d0;</i></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"l-prevew-box\">\r\n                <div className=\"l-preview-iframe\">\r\n                    <div className=\"l-preview-scroll\" ref={tipHeightRef}>\r\n                        <div className=\"lAnt-spin-nested-loading\">\r\n                            <div className=\"lAnt-spin__main\" style={{ background: \"rgb(255,255,255)\" }}>\r\n                                <div\r\n                                    className=\"lAnt-spin__main-inner\"\r\n                                    onClick={clickHandler}\r\n                                    style={{ paddingBottom: \"0px\" }}\r\n                                    id=\"stage\"\r\n                                >\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"l-preview-container\">\r\n                    <div className=\"l-preview-tips\" style={{ height: tipHeight + 'px', display: isShow ? \"block\" : \"none\" }} >\r\n                        <div className=\"l-view-hover-tip\" style={{ top: '0px', height: '0px' }}></div>\r\n                        <div className=\"l-view-active-tip\" style={{ top: atipTop + 'px', height: atipHeight + 'px' }}></div>\r\n                        <div className=\"l-view-tools\" style={{ top: atipTop + \"px\" }}>\r\n                            <div className={cx(\"l-tools-move\",{\r\n                                \"hide\": pageData.length <= 1\r\n                            })}>\r\n                                <i\r\n                                    className={cx(\"icon iconfont\", {\r\n                                        \"hide\": comp_i === 0\r\n                                    })}\r\n                                    style={{\r\n                                        marginBottom: comp_i === (pageData.length - 1) ? \"0\" : \"13px\"\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        moveComp(comp_i, comp_i - 1)\r\n                                    }}>&#xe703;</i>\r\n                                <i\r\n                                    className={cx(\"icon iconfont\", {\r\n                                        \"hide\": comp_i === (pageData.length - 1)\r\n                                    })}\r\n                                    onClick={() => {\r\n                                        moveComp(comp_i, comp_i + 1)\r\n                                    }}>&#xe780;</i>\r\n                            </div>\r\n                            <div className=\"l-tools-copy\">\r\n                                <i className=\"icon iconfont\">&#xe767;</i>\r\n                            </div>\r\n                            <div className=\"l-tools-delete\" onClick={() => { deleteComp() }}>\r\n                                <i className=\"icon iconfont\">&#xe74e;</i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n// 映射Redux全局的state到组件到props上\r\nconst mapStateToProps = (state) => ({\r\n    currentTemplate: state.getIn(['template', 'currentTemplate']),  // 左侧添加面板中 选中的模版\r\n    pid: state.getIn(['page', 'pid']),\r\n    pageData: state.getIn(['page', 'pageData']),\r\n    comp_i: state.getIn(['panels', 'comp_i'])\r\n})\r\n// 映射dispatch到props上\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePanelStateDispatch(data, comp_i) {\r\n            dispatch(changePanel(data))\r\n            dispatch(changeCompI(comp_i))\r\n        },\r\n        addTemplateDispatch(data) {\r\n            dispatch(addTemplate(data))\r\n        },\r\n        changePageDataDispatch(data, id) {\r\n            localStorage.setItem(`tpl_${id}`, JSON.stringify(data))\r\n            dispatch(changePage(data))\r\n        },\r\n        changeCompIDispatch(i) {\r\n            dispatch(changeCompI(i))\r\n        }\r\n    }\r\n}\r\n\r\n// 将ui组件包装成容器组件\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Preview))","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\page\\index.jsx",["372"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { getUserTplRequest, addTplRequest, deleteTplRequest, updateTplRequest } from 'src/api/request'\r\nimport { connect } from 'react-redux'\r\nimport { changePid, changePageTitle, changePage } from \"src/store/actions\";\r\nimport cx from 'classnames'\r\nimport { Input, Popover, Popconfirm, message } from 'antd'\r\nimport './style.sass'\r\n\r\nfunction LeftPanel(props) {\r\n    const {\r\n        pid,\r\n        pUpdate,\r\n        changePageStateDispatch,\r\n        changePageTitleDispatch\r\n    } = props\r\n\r\n    const safeRef = useRef(false)\r\n    const [tpl, setTpl] = useState([])\r\n\r\n    /**\r\n     * @description 定义安全函数 防止内存泄漏问题\r\n     * @param {string} data -接口返回的数据\r\n     */\r\n    const safeSetTplData = (data) => safeRef.current && setTpl(data)\r\n\r\n    const getUserTplData = () => {\r\n        getUserTplRequest().then(async (res) => {\r\n            function wait(res) {\r\n                for (let v of res) {\r\n                    if(localStorage.getItem(`tpl_${v.id}`)) {\r\n                        v[\"tplData\"] = localStorage.getItem(`tpl_${v.id}`)\r\n                    }\r\n                }\r\n            }\r\n            await wait(res)\r\n            safeSetTplData(res)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 只需要执行一次 接口数据的请求\r\n     */\r\n    useEffect(() => {\r\n        getUserTplData()\r\n    }, [pUpdate])\r\n\r\n    useEffect(() => {\r\n        document.onclick = ()=>{setUpdate(0)}\r\n        safeRef.current = true\r\n        return () => {\r\n            safeRef.current = false\r\n        }\r\n    })\r\n\r\n    // 添加页面  true-展示 false-隐藏\r\n    const [add, setAdd] = useState(false)\r\n\r\n    const [update, setUpdate] = useState(0)\r\n\r\n    const content = () => {\r\n\r\n        const pStyle = {\r\n            textAlign: \"center\",\r\n            cursor:\"pointer\"\r\n        }\r\n\r\n        const text = '你确定要删除这个页面吗?';\r\n        async function confirm(pid) {\r\n            await deleteTplRequest(pid).then(res=>{\r\n                message.info(res);\r\n                localStorage.removeItem(`tpl_${pid}`)\r\n                getUserTplData()\r\n            })\r\n            changePageStateDispatch([],0,'')\r\n        }\r\n        return (\r\n        <div>\r\n            <Popconfirm\r\n                placement=\"rightTop\"\r\n                title={text}\r\n                onConfirm={()=>confirm(pid)}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n            >\r\n                <p style={pStyle}>删除</p>\r\n            </Popconfirm>\r\n            <hr />\r\n            <p style={pStyle} onClick={()=>setUpdate(pid)}>重命名</p>\r\n        </div> \r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"l-panel\" style={{ width: \"336px\" }}>\r\n                <div className=\"l-panel-container\">\r\n                    <h3>页面列表<i className=\"icon iconfont\">&#xe75e;</i></h3>\r\n                    <div className=\"l-panel-list\">\r\n                        {\r\n                            tpl.length !== 0 && tpl.map((item, i) => {\r\n                                return (\r\n                                    <div\r\n                                        className={cx(\"l-panel-item\", { \"l-panel-item-active\": pid === item[\"id\"] })}\r\n                                        onClick={(e) => {\r\n                                            setAdd(false)\r\n                                            changePageStateDispatch(JSON.parse(item[\"tplData\"]),item[\"id\"],item[\"title\"])\r\n                                            console.log(update,'????xxx')\r\n                                            e.nativeEvent.stopImmediatePropagation()\r\n                                        }}\r\n                                        key={i}\r\n                                    >\r\n                                        <div className=\"l-panel-item__drag\"></div>\r\n                                        <div className=\"l-panel-item__title\">\r\n                                            <h4>\r\n                                                <span>\r\n                                                {\r\n                                                    update === item[\"id\"] && pid === item[\"id\"] ? \r\n                                                    <Input size=\"small\" onPressEnter={(e) => {\r\n                                                        setUpdate(false)\r\n                                                        // 更新页面标题\r\n                                                        updateTplRequest(pid,{title: e.target.value})\r\n                                                            .then(res => {\r\n                                                                if(Array.isArray(res)){\r\n                                                                    // 返回的是 err 信息，err有多条\r\n                                                                    message.info(res.join('&'))\r\n                                                                }else{\r\n                                                                    // 成功返回\r\n                                                                   message.info(res) \r\n                                                                }\r\n                                                                // 修改了页面数据后，重新从服务端拉去数据，渲染页面\r\n                                                                getUserTplData()\r\n                                                                changePageTitleDispatch(e.target.value)\r\n                                                            })\r\n                                                    }} /> :\r\n                                                    item[\"title\"]\r\n                                                }\r\n                                                </span>\r\n                                                {\r\n                                                    item[\"homePage\"] === 1 ?\r\n                                                        <em>首页</em> : \"\"\r\n                                                }\r\n                                            </h4>\r\n                                            <span className=\"l-panel__title--path\">{item[\"id\"]}.html</span>\r\n                                        </div>\r\n                                        <Popover placement=\"right\" content={content} trigger=\"click\">\r\n                                            <i className=\"icon iconfont\">&#xe7f5;</i>\r\n                                        </Popover>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        {\r\n                            add ?\r\n                                <div\r\n                                    className=\"l-panel-item\"\r\n                                >\r\n                                    <div className=\"l-panel-item__drag\"></div>\r\n                                    <div className=\"l-panel-item__title\">\r\n                                        <h4>\r\n                                            <span>\r\n                                                <Input size=\"small\" onPressEnter={(e) => {\r\n                                                    setAdd(false)\r\n                                                    // 创建一个空页面\r\n                                                    addTplRequest(JSON.stringify([]), 1, e.target.value)\r\n                                                        .then(res => {\r\n                                                            getUserTplData()\r\n                                                            changePageStateDispatch([],res.id,e.target.value)\r\n                                                        })\r\n                                                }} />\r\n                                            </span>\r\n                                        </h4>\r\n                                        <span className=\"l-panel__title--path\">（自动生成）</span>\r\n                                    </div>\r\n                                    <i className=\"icon iconfont\">&#xe7f5;</i>\r\n                                </div> : \"\"\r\n                        }\r\n                    </div>\r\n                    <div className=\"l-panel-add\" onClick={() => setAdd(true)}>\r\n                        <span><i className=\"icon iconfont\">&#xe8a1;</i>添加页面</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"l-panel-animate\" style={{ width: \"336px\" }}></div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n// 映射Redux全局的state到组件到props上\r\nconst mapStateToProps = (state) => ({\r\n    pUpdate: state.getIn(['page', 'pUpdate']),\r\n    pid: state.getIn(['page', 'pid'])\r\n})\r\n// 映射dispatch到props上\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePidStateDispatch(id) {\r\n            dispatch(changePid(id))\r\n        },\r\n        changePageStateDispatch(data, id, title) {\r\n            dispatch(changePid(id))\r\n            dispatch(changePageTitle(title))\r\n            id !== 0 && localStorage.setItem(`tpl_${id}`,JSON.stringify(data))\r\n            dispatch(changePage(data))\r\n        },\r\n        changePageTitleDispatch(title) {\r\n            dispatch(changePageTitle(title))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(LeftPanel))","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\api\\request.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\utils\\tools\\config.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\actions\\index.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\utils\\help\\index.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\utils\\compile\\index.js",["373"],"import React from 'react'\r\nimport { getJsxClass } from '../help'\r\n\r\nconst Compile = (json) => {\r\n    let { tag, id } = json\r\n    let jsxClass = getJsxClass(json.tag)\r\n    // console.log(jsxClass,'jsxClass')\r\n    let props = {\r\n        ...json.props,\r\n        id,\r\n        // tag\r\n    }\r\n    let children = []\r\n\r\n    if(json.children) {\r\n        let len = json.children.length\r\n        let child = json.children\r\n        for(let i = 0; i < len; i++) {\r\n            let childJSX = Compile(child[i])\r\n            children.push(childJSX)\r\n        }\r\n    }\r\n    return React.createElement(jsxClass, { ...props }, ...children)\r\n}\r\n\r\nexport {\r\n    Compile\r\n}","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\index.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\api\\config.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\addComponents\\generalTemplate\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\actions\\pageaction.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\actions\\panelaction.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\actions\\templateaction.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\utils\\help\\props.js",["374"],"var props = {\r\n\tBanner: {\r\n\t\ttemplate: 'banner1'\r\n\t},\r\n\tCarousel: {\r\n\t\ttemplate: 'Carousel2'\r\n\t},\r\n\tAutoComplete:{\r\n\t\tallowClear:true,\r\n\t\tplaceholder:\"请输入\",\r\n\t\toptions:[\r\n            { value: '张三' },\r\n            { value: '李四' },\r\n            { value: '王五'}\r\n\t\t],\r\n\t\tclassName:\"test123\",\r\n\t\tstyle:{color:\"red\"}\r\n\t},\r\n\tAlert:{\r\n\t\tshowIcon:true,\r\n\t\ttype:\"success\",\r\n\t\tmessage:\"这是提示信息\",\r\n\t},\r\n\tAvatar:{\r\n\t\ticon:\"user\"\r\n\t},\r\n\tBackTop:{\r\n\t\tvisibilityHeight:\"100\"\r\n\t},\r\n\tBadge:{\r\n\t\tcount:99,\r\n\t\ttitle:\"徽标\"\r\n\t},\r\n\tBreadcrumb:{},\r\n\tButton:{\r\n\t\ttype:\"primary\",\r\n\t\tchildren:[\"Click Me\"]\r\n\t},\r\n\tCalendar:{},\r\n\tCard:{\r\n\t\thoverable:true,\r\n\t\tloading:true,\r\n\t\ttitle:\"这里是卡片标题\"\r\n\t},\r\n\tCollapse:{},\r\n\tCarousel:{\r\n\t\t\r\n\t},\r\n\tCascader:{\r\n\t\toptions:[\r\n\t\t  {\r\n\t\t    value: 'zhejiang',\r\n\t\t    label: 'Zhejiang',\r\n\t\t    children: [\r\n\t\t      {\r\n\t\t        value: 'hangzhou',\r\n\t\t        label: 'Hangzhou',\r\n\t\t        children: [\r\n\t\t          {\r\n\t\t            value: 'xihu',\r\n\t\t            label: 'West Lake',\r\n\t\t          },\r\n\t\t        ],\r\n\t\t      },\r\n\t\t    ],\r\n\t\t  },\r\n\t\t  {\r\n\t\t    value: 'jiangsu',\r\n\t\t    label: 'Jiangsu',\r\n\t\t    children: [\r\n\t\t      {\r\n\t\t        value: 'nanjing',\r\n\t\t        label: 'Nanjing',\r\n\t\t        children: [\r\n\t\t          {\r\n\t\t            value: 'zhonghuamen',\r\n\t\t            label: 'Zhong Hua Men',\r\n\t\t          },\r\n\t\t        ],\r\n\t\t      },\r\n\t\t    ],\r\n\t\t  },\r\n\t\t]\r\n\t},\r\n\tCheckbox:{},\r\n\tCol:{\r\n\t\tstyle:{\r\n\t\t\theight:\"200px\"\r\n\t\t}\r\n\t},\r\n\tComment:{},\r\n\tDatePicker:{},\r\n\tDescriptions:{},\r\n\tDivider:{\r\n\t\tdashed:true,\r\n\t\tstyle:{\r\n\t\t\tcolor:\"red\",\r\n\t\t\tbackground:\"#000\"\r\n\t\t},\r\n\t\tchildren:[\" 分割线\"]\r\n\t},\r\n\tDropdown:{},\r\n\tDrawer:{\r\n\t\ttitle:\"这是一个抽屉\",\r\n        placement:\"right\",\r\n        closable:true,\r\n        visible:true\r\n\t},\r\n\tEmpty:{},\r\n\tForm:{},\r\n\tIcon:{\r\n\t\ttype:\"apple\"\r\n\t},\r\n\tInput:{\r\n\t\taddonBefore:\"user\",\r\n\t\tplaceholder:\"请输入账号\",\r\n\t\tallowClear:true\r\n\t},\r\n\tInputNumber:{\r\n\t\tmax:10,\r\n\t\tmin:0,\r\n\t\tprecision:2\r\n\t},\r\n\tLayout:{},\r\n\tList:{},\r\n\tmessage:{},\r\n\tMenu:{},\r\n\tMentions:{},\r\n\tModal:{},\r\n\tStatistic:{\r\n\t\ttitle:\"年收入(¥)\",\r\n\t\tvalue:999888,\r\n\t\tprecision:2\r\n\t},\r\n\tnotification:{},\r\n\tPageHeader:{\r\n\t\tstyle:{\r\n\t      border: '1px solid rgb(235, 237, 240)',\r\n\t    },\r\n\t    title:\"这是标题\",\r\n\t    subTitle:\"这是次标题\"\r\n\t},\r\n\tPagination:{\r\n\t\tdefaultCurrent:1,\r\n\t\ttotal:50\r\n\t},\r\n\tPopconfirm:{},\r\n\tPopover:{},\r\n\tProgress:{\r\n\t\ttype:\"circle\",\r\n\t\tpercent:75,\r\n\t\tstatus:\"active\"\r\n\t},\r\n\tRadio:{},\r\n\tRate:{},\r\n\tResult:{},\r\n\tRow:{\r\n\t\tstyle:{\r\n\t\t\theight:\"200px\",\r\n\t\t\tborder: \"1px dashed blue\"\r\n\t\t}\r\n\t},\r\n\tSelect:{},\r\n\tSkeleton:{\r\n\t\tactive:true,\r\n\t\tavatar:true,\r\n\t\ttitle:true\r\n\t},\r\n\tSlider:{},\r\n\tSpin:{},\r\n\tSteps:{},\r\n\tSwitch:{},\r\n\tTable:{\r\n\t\tdataSource:[\r\n\t\t  {\r\n\t\t    key: '1',\r\n\t\t    name: '胡彦斌',\r\n\t\t    age: 32,\r\n\t\t    address: '西湖区湖底公园1号',\r\n\t\t  },\r\n\t\t  {\r\n\t\t    key: '2',\r\n\t\t    name: '胡彦祖',\r\n\t\t    age: 42,\r\n\t\t    address: '西湖区湖底公园1号',\r\n\t\t  },\r\n\t\t],\r\n\t\tcolumns:[\r\n\t\t  {\r\n\t\t    title: '姓名',\r\n\t\t    dataIndex: 'name',\r\n\t\t    key: 'name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t    title: '年龄',\r\n\t\t    dataIndex: 'age',\r\n\t\t    key: 'age',\r\n\t\t  },\r\n\t\t  {\r\n\t\t    title: '住址',\r\n\t\t    dataIndex: 'address',\r\n\t\t    key: 'address',\r\n\t\t  },\r\n\t\t],\r\n\t\tborder:true\r\n\t},\r\n\tTransfer:{},\r\n\tTree:{},\r\n\tTreeSelect:{},\r\n\tTabs:{},\r\n\tTag:{\r\n\t\tcolor:\"purple\",\r\n\t\tchildren:[\"purple\"]\r\n\t},\r\n\tTimePicker:{},\r\n\tTimeline:{},\r\n\tTooltip:{},\r\n\tTypography:{},\r\n\tMention:{},\r\n\tUpload:{\r\n\t\tprops:{\r\n\t\t  name: 'file',\r\n\t\t  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\t\t  headers: {\r\n\t\t    authorization: 'authorization-text',\r\n\t\t  },\r\n\t\t  onChange(info) {\r\n\t\t    if (info.file.status !== 'uploading') {\r\n\t\t      console.log(info.file, info.fileList);\r\n\t\t    }\r\n\t\t    if (info.file.status === 'done') {\r\n\t\t      console.log(`${info.file.name} file uploaded successfully`);\r\n\t\t    } else if (info.file.status === 'error') {\r\n\t\t      console.log(`${info.file.name} file upload failed.`);\r\n\t\t    }\r\n\t\t  },\r\n\t\t},\r\n\t\tchildren:['点击上传']\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport {\r\n\tprops\r\n}","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\index.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\tab1\\index.jsx",["375","376"],"import React, { useRef } from 'react';\r\nimport { Collapse, Input } from 'antd';\r\nimport { Upload, LinkAddress } from \"components\";\r\nimport _ from 'lodash'\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst { Panel } = Collapse;\r\nconst genExtra = () => (\r\n    <DeleteOutlined\r\n        onClick={event => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n            console.log('delete')\r\n        }}\r\n    />\r\n);\r\n\r\nconst Tab1 = (props) => {\r\n    const { \r\n        comp_i, \r\n        pageData, \r\n        changePageDataDispatch \r\n    } = props\r\n\r\n    const path = useRef([])\r\n    const tpl = pageData[comp_i]\r\n\r\n    const tplData = (path) => {\r\n        if(path.length !== 0) {\r\n            return path.reduce((pre,cur)=>{\r\n                if(pre !== 0) {\r\n                    return pre.children[cur]\r\n                }\r\n                return tpl.children[cur]\r\n            },0)\r\n        }else {\r\n            return tpl\r\n        } \r\n    }\r\n\r\n    const changeVal = (path,newVal,type) => {\r\n        const tmp = tplData(path)\r\n        tmp[type] = newVal\r\n        changePageDataDispatch(pageData)\r\n    }\r\n\r\n    const curried = _.curry(changeVal)\r\n\r\n    return (\r\n        <div className=\"schema-editor-container\">\r\n            <Collapse accordion onChange={(e) => {\r\n                path.current = [e]\r\n            }}>\r\n                {\r\n                    tpl.children.map((item, i) => {\r\n                        return (\r\n                            <Panel header={item[\"label\"]} key={i} extra={genExtra()}>\r\n                                <h3>标签</h3>\r\n                                <Input key={item[\"label\"]} defaultValue={item[\"label\"]} onChange={_.debounce((e)=>changeVal(path.current,e.target.value,\"label\"),250)} />\r\n                                <h3>内容</h3>\r\n                                <Collapse accordion onChange={(j)=>{\r\n                                    path.current = [i,j]\r\n                                }}>\r\n                                    {\r\n                                        item.children.map((item2, j) => {\r\n                                            return (\r\n                                                <Panel header={item2[\"title\"]} key={j} extra={genExtra()}>\r\n                                                    <h3>标题</h3>\r\n                                                    <Input key={item2[\"title\"]} defaultValue={item2[\"title\"]} onChange={_.debounce((e)=>changeVal(path.current,e.target.value,\"title\"),250)} />\r\n                                                    <h3>封面</h3>\r\n                                                    <Upload\r\n                                                        imgHeight={144}\r\n                                                        imgWidth={220}\r\n                                                        changeVal={curried(path.current)}\r\n                                                    />\r\n                                                    <LinkAddress linkVal={item2[\"link_address\"]} changeVal={curried(path.current)} />\r\n                                                </Panel>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Collapse>\r\n                                <a className=\"schema-editor-container__add\"><i className=\"icon iconfont\">&#xe8a1;</i> 新增列表项</a>\r\n                            </Panel>\r\n                        )\r\n                    })\r\n                }\r\n            </Collapse>\r\n            <a className=\"schema-editor-container__add\"><i className=\"icon iconfont\">&#xe8a1;</i> 新增列表项</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Tab1)","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\operationList\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\newList\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\carousel\\index.jsx",["377"],"import React, { useRef } from 'react';\r\nimport { Collapse } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { Upload, LinkAddress } from \"components\";\r\nimport _ from 'lodash';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst genExtra = () => (\r\n    <DeleteOutlined\r\n        onClick={event => {\r\n        // If you don't want click extra trigger collapse, you can prevent this:\r\n        // event.stopPropagation();\r\n        console.log('delete')\r\n        }}\r\n    />\r\n);\r\n\r\nfunction CarouselPanel(props) {\r\n    const {\r\n        comp_i,\r\n        pageData,\r\n        changePageDataDispatch\r\n    } = props\r\n\r\n    const path = useRef([])\r\n    const tpl = pageData[comp_i]\r\n\r\n    const tplData = (path) => {\r\n        if(path.length !== 0) {\r\n            return path.reduce((pre,cur)=>{\r\n                if(pre !== 0) {\r\n                    return pre.children[cur]\r\n                }\r\n                return tpl.children[cur]\r\n            },0)\r\n        }else {\r\n            return tpl\r\n        } \r\n    }\r\n\r\n    const changeVal = (path,newVal,type) => {\r\n        const tmp = tplData(path)\r\n        tmp[type] = newVal\r\n        changePageDataDispatch(pageData)\r\n    }\r\n\r\n    const curried = _.curry(changeVal)\r\n        \r\n    return (\r\n        <div className=\"schema-editor-container\">\r\n            <Collapse accordion onChange={(key)=>{\r\n                path.current = [key]\r\n            }}>\r\n                {\r\n                    tpl.children.map((item,i)=>{\r\n                        return (\r\n                            <Panel header={`This is panel header ${i+1}`} key={i} extra={genExtra()}>\r\n                                <Upload \r\n                                    imgWidth={750}\r\n                                    imgHeight={280}\r\n                                    changeVal={curried(path.current)}\r\n                                />\r\n                                <LinkAddress linkVal={item[\"link_address\"]} changeVal={curried(path.current)} />\r\n                            </Panel>\r\n                        )\r\n                    })\r\n                }\r\n            </Collapse>\r\n            <a className=\"schema-editor-container__add\"><i className=\"icon iconfont\">&#xe8a1;</i> 新增列表项</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(CarouselPanel);","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\tab2\\index.jsx",["378"],"import React, { useRef } from 'react';\r\nimport { Collapse, Input } from 'antd';\r\nimport { Upload, LinkAddress } from \"components\";\r\nimport _ from 'lodash'\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst { Panel } = Collapse;\r\nconst genExtra = () => (\r\n    <DeleteOutlined\r\n        onClick={event => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n            console.log('delete')\r\n        }}\r\n    />\r\n);\r\n\r\nconst Tab2 = (props) => {\r\n    const { \r\n        comp_i, \r\n        pageData, \r\n        changePageDataDispatch \r\n    } = props\r\n\r\n    const path = useRef([])\r\n    const tpl = pageData[comp_i]\r\n\r\n    const tplData = (path) => {\r\n        if(path.length !== 0) {\r\n            return path.reduce((pre,cur)=>{\r\n                if(pre !== 0) {\r\n                    return pre.children[cur]\r\n                }\r\n                return tpl.children[cur]\r\n            },0)\r\n        }else {\r\n            return tpl\r\n        } \r\n    }\r\n\r\n    const changeVal = (path,newVal,type) => {\r\n        const tmp = tplData(path)\r\n        tmp[type] = newVal\r\n        changePageDataDispatch(pageData)\r\n    }\r\n\r\n    const curried = _.curry(changeVal)\r\n\r\n    return (\r\n        <div className=\"schema-editor-container\">\r\n            <Collapse accordion onChange={(e) => {\r\n                path.current = [e]\r\n            }}>\r\n                {\r\n                    pageData[comp_i].children.map((item, i) => {\r\n                        return (\r\n                            <Panel header={item[\"label\"]} key={i} extra={genExtra()}>\r\n                                <h3>文案</h3>\r\n                                <Input key={item[\"label\"]} defaultValue={item[\"label\"]} onChange={_.debounce((e)=>changeVal(path.current,e.target.value,\"label\"),250)} />\r\n                                <h3>图片</h3>\r\n                                <Upload\r\n                                    imgHeight={56}\r\n                                    imgWidth={56}\r\n                                    changeVal={curried(path.current)}\r\n                                />\r\n                                <LinkAddress linkVal={item[\"link_address\"]} changeVal={curried(path.current)} />\r\n                            </Panel>\r\n                        )\r\n                    })\r\n                }\r\n            </Collapse>\r\n            <a className=\"schema-editor-container__add\"><i className=\"icon iconfont\">&#xe8a1;</i> 新增列表项</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Tab2)","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\banner\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\gridList\\index.jsx",["379"],"import React, { useRef } from 'react';\r\nimport { Collapse, Input } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { Uploads, LinkAddress } from \"components\";\r\nimport _ from 'lodash'\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst genExtra = () => (\r\n    <DeleteOutlined\r\n        onClick={event => {\r\n        // If you don't want click extra trigger collapse, you can prevent this:\r\n        // event.stopPropagation();\r\n        console.log('delete')\r\n        }}\r\n    />\r\n);\r\n\r\nfunction CarouselPanel(props) {\r\n    const {\r\n        comp_i,\r\n        pageData,\r\n        template,\r\n        changePageDataDispatch\r\n    } = props\r\n\r\n    const path = useRef([])\r\n    const tpl = pageData[comp_i]\r\n\r\n    const tplData = (path) => {\r\n        if(path.length !== 0) {\r\n            return path.reduce((pre,cur)=>{\r\n                if(pre !== 0) {\r\n                    return pre.children[cur]\r\n                }\r\n                return tpl.children[cur]\r\n            },0)\r\n        }else {\r\n            return tpl\r\n        } \r\n    }\r\n\r\n    const changeVal = (path,newVal,type) => {\r\n        const tmp = tplData(path)\r\n        tmp[type] = newVal\r\n        changePageDataDispatch(pageData)\r\n    }\r\n        \r\n    const curried = _.curry(changeVal)\r\n\r\n    return (\r\n        <div className=\"schema-editor-container\">\r\n            <Collapse accordion onChange={(key)=>{\r\n                path.current = [key]\r\n            }}>\r\n                {\r\n                    tpl.children.map((item,i)=>{\r\n                        return (\r\n                            <Panel header={`This is ${i+1}`} key={i} extra={genExtra()}>\r\n                                <Collapse accordion onChange={(j)=>{\r\n                                    path.current = [i,j]\r\n                                }}>\r\n                                    {\r\n                                        item.children.map((item2,j)=>{\r\n                                            return (\r\n                                                <Panel header={item2[\"title\"]} key={j} extra={genExtra()}>\r\n                                                    <h3>标题</h3>\r\n                                                    <Input key={item2[\"title\"]} defaultValue={item2[\"title\"]} onChange={_.debounce((e) => changeVal(path.current, e.target.value, \"title\"), 250)} />\r\n                                                    {\r\n                                                        template === 'gridlist3' ? \"\" :\r\n                                                        <React.Fragment>\r\n                                                            <h3>副标题</h3>\r\n                                                            <Input key={item2[\"subtitle\"]} defaultValue={item2[\"subtitle\"]} onChange={_.debounce((e) => changeVal(path.current, e.target.value, \"subtitle\"), 250)} />\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                    {\r\n                                                        template === 'gridlist2' ? \r\n                                                        <React.Fragment>\r\n                                                            <h3>标签</h3>\r\n                                                            <Input key={item2[\"tag\"]} defaultValue={item2[\"tag\"]} onChange={_.debounce((e) => changeVal(path.current, e.target.value, \"tag\"), 250)} />\r\n                                                        </React.Fragment> : \"\"\r\n                                                    }\r\n                                                    <Uploads \r\n                                                        imgWidth={750}\r\n                                                        imgHeight={280}\r\n                                                        maxlist={item.children.length}\r\n                                                    />\r\n                                                    <LinkAddress linkVal={item2[\"link_address\"]} changeVal={curried(path.current)} />\r\n                                                </Panel>    \r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Collapse>\r\n                            </Panel>\r\n                        )\r\n                    })\r\n                }\r\n            </Collapse>\r\n            <a className=\"schema-editor-container__add\"><i className=\"icon iconfont\">&#xe8a1;</i> 新增列表项</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(CarouselPanel);","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\normalList\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\cardList\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\rowList\\index.jsx",["380"],"import React, { useRef } from 'react';\r\nimport { Input, Collapse } from 'antd';\r\nimport { Upload, LinkAddress } from \"components\";\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport _ from 'lodash'\r\n\r\nconst { Panel } = Collapse;\r\nconst genExtra = () => (\r\n    <DeleteOutlined\r\n        onClick={event => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n            console.log('delete')\r\n        }}\r\n    />\r\n);\r\n\r\nconst RowPanel = (props) => {\r\n    const {\r\n        comp_i,\r\n        pageData,\r\n        changePageDataDispatch\r\n    } = props\r\n    const path = useRef([])\r\n    const tpl = pageData[comp_i]\r\n\r\n    const tplData = (path) => {\r\n        if (path.length !== 0) {\r\n            return path.reduce((pre, cur) => {\r\n                if (pre !== 0) {\r\n                    return pre.children[cur]\r\n                }\r\n                return tpl.children[cur]\r\n            }, 0)\r\n        } else {\r\n            return tpl\r\n        }\r\n    }\r\n\r\n    const changeVal = (path, newVal, type) => {       \r\n        const tmp = tplData(path)\r\n        tmp[type] = newVal\r\n        changePageDataDispatch(pageData)\r\n    }\r\n    \r\n    const curried = _.curry(changeVal)\r\n\r\n    return (\r\n        <div className=\"schema-editor-container\">\r\n            <Collapse accordion onChange={(key) => {\r\n                path.current = [key]\r\n            }}>\r\n                {\r\n                    tpl.children.map((item, i) => {\r\n                        return (\r\n                            <Panel header={item[\"title\"]} key={i} extra={genExtra()}>\r\n                                <h3>标题</h3>\r\n                                <Input key={item[\"title\"]} defaultValue={item[\"title\"]} onChange={_.debounce((e) => changeVal(path.current, e.target.value, \"title\"), 250)} />\r\n                                <h3>标签</h3>\r\n                                <Input key={item[\"tag\"]} defaultValue={item[\"tag\"]} onChange={_.debounce((e) => changeVal(path.current, e.target.value, \"tag\"), 250)} />\r\n                                <h3>图片</h3>\r\n                                <Upload\r\n                                    imgHeight={56}\r\n                                    imgWidth={56}\r\n                                    changeVal={curried(path.current)}\r\n                                />\r\n                                <LinkAddress linkVal={item[\"link_address\"]} changeVal={curried(path.current)} />\r\n                            </Panel>\r\n                        )\r\n                    })\r\n                }\r\n            </Collapse>\r\n            <a className=\"schema-editor-container__add\"><i className=\"icon iconfont\">&#xe8a1;</i> 新增列表项</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(RowPanel);","D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\title\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\quote\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\img\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\parleft\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\faq\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\cutList\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\button\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\footer\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\baseUI\\leftPanel\\editComponents\\shared\\step\\index.jsx",["381"],"import React, { useRef } from 'react';\r\nimport { Collapse, Input } from 'antd';\r\nimport { Upload } from \"components\";\r\nimport _ from 'lodash'\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst { Panel } = Collapse;\r\nconst genExtra = () => (\r\n    <DeleteOutlined\r\n        onClick={event => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n            console.log('delete')\r\n        }}\r\n    />\r\n);\r\n\r\nconst Tab2 = (props) => {\r\n    const { \r\n        comp_i, \r\n        pageData, \r\n        changePageDataDispatch \r\n    } = props\r\n\r\n    const path = useRef([])\r\n    const tpl = pageData[comp_i]\r\n\r\n    const tplData = (path) => {\r\n        if(path.length !== 0) {\r\n            return path.reduce((pre,cur)=>{\r\n                if(pre !== 0) {\r\n                    return pre.children[cur]\r\n                }\r\n                return tpl.children[cur]\r\n            },0)\r\n        }else {\r\n            return tpl\r\n        } \r\n    }\r\n\r\n    const changeVal = (path,newVal,type) => {\r\n        const tmp = tplData(path)\r\n        tmp[type] = newVal\r\n        changePageDataDispatch(pageData)\r\n    }\r\n\r\n    const curried = _.curry(changeVal)\r\n\r\n    return (\r\n        <div className=\"schema-editor-container\">\r\n            <Collapse accordion onChange={(e) => {\r\n                path.current = [e]\r\n            }}>\r\n                {\r\n                    pageData[comp_i].children.map((item, i) => {\r\n                        return (\r\n                            <Panel header={item[\"step\"]} key={i} extra={genExtra()}>\r\n                                <h3>步骤</h3>\r\n                                <Input key={item[\"step\"]} defaultValue={item[\"step\"]} onChange={_.debounce((e)=>changeVal(path.current,e.target.value,\"step\"),250)} />\r\n                                <h3>标题</h3>\r\n                                <Input key={item[\"title\"]} defaultValue={item[\"title\"]} onChange={_.debounce((e)=>changeVal(path.current,e.target.value,\"title\"),250)} />\r\n                                <h3>描述</h3>\r\n                                <Input key={item[\"desc\"]} defaultValue={item[\"desc\"]} onChange={_.debounce((e)=>changeVal(path.current,e.target.value,\"desc\"),250)} />\r\n                                <h3>图片</h3>\r\n                                <Upload\r\n                                    imgHeight={56}\r\n                                    imgWidth={56}\r\n                                    changeVal={curried(path.current)}\r\n                                />\r\n                            </Panel>\r\n                        )\r\n                    })\r\n                }\r\n            </Collapse>\r\n            <a className=\"schema-editor-container__add\"><i className=\"icon iconfont\">&#xe8a1;</i> 新增列表项</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Tab2)","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\upload\\uploads.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\tabs\\index.jsx",["382"],"import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport './style.sass';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction callback(key) {\r\n    console.log(key);\r\n}\r\n\r\nconst CompList = (arr) => {\r\n    return (\r\n        arr.map((item2, j) => {\r\n            return (\r\n                <div key={j}>\r\n                    <a className=\"fd-link fd-subject\">\r\n                        <div className=\"fd-subject-cover\" style={{ backgroundImage: 'url(' + item2[\"img_address\"] + ')' }}></div>\r\n                        <div className=\"fd-subject-content\">\r\n                            <h1 className=\"fd-title line-cut-2\">{item2[\"title\"]}</h1>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nfunction Tab(props) {\r\n\r\n    const {\r\n        changePanelStateDispatch,\r\n        template,\r\n        left_editor,\r\n        id,\r\n        children,\r\n        index\r\n    } = props\r\n\r\n    return (\r\n        <div className=\"use-tag\" style={{ position: \"relative\" }} id={id} data-index={index}>\r\n            <Tabs defaultActiveKey=\"1\" onChange={callback} centered onClick={() => {\r\n                changePanelStateDispatch([left_editor,template],index)\r\n            }}>\r\n                {\r\n                    children.map((item, i) => {\r\n                        return (\r\n                            <TabPane tab={item[\"label\"]} key={i + 1}>\r\n                                {\r\n                                    CompList(item[\"children\"])\r\n                                }\r\n                            </TabPane>\r\n                        )\r\n                    })\r\n                }\r\n            </Tabs>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nTab.propTypes = {\r\n    changePanelStateDispatch: PropTypes.func,\r\n    type: PropTypes.string,\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.arrayOf(PropTypes.shape({\r\n        label: PropTypes.string,\r\n        children: PropTypes.arrayOf(PropTypes.shape({\r\n            img_address: PropTypes.string,\r\n            title: PropTypes.string,\r\n            link_address: PropTypes.string\r\n        }))\r\n    }))\r\n}\r\n\r\nTab.defaultProps = {\r\n    type: \"text\"\r\n}\r\nexport default React.memo(Tab)","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\tabs\\entryTab.jsx",["383"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst EnteryNormal = styled.div`\r\n    .comp_entry_normal_1 {\r\n        display: flex;\r\n        padding: 16px;\r\n        justify-content: space-between;\r\n        flex-wrap: nowrap;\r\n        font-size: 0;\r\n\r\n        &-item {\r\n            text-align: center;\r\n            text-decoration: none;\r\n            \r\n            img {\r\n                display: inline-block;\r\n                margin-bottom: 8px;\r\n                width: 28px;\r\n                height: 28px;\r\n            }\r\n\r\n            p {\r\n                white-space: nowrap;\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                display: block;\r\n                font-size: 13px;\r\n                color: #333;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nfunction EntryTab(props) {\r\n\r\n    const {\r\n        changePanelStateDispatch,\r\n        template,\r\n        left_editor,\r\n        id,\r\n        children,\r\n        index\r\n    } = props\r\n\r\n    return (\r\n        <EnteryNormal onClick={() => { \r\n            changePanelStateDispatch([left_editor,template],index)\r\n         }}>\r\n            <div className=\"use-tag\" style={{ position: \"relative\" }} id={id} data-index={index}>\r\n                <section className=\"comp_entry_normal_1\">\r\n                    {\r\n                        children.map((item, i) => {\r\n                            return (\r\n                                <a className=\"comp_entry_normal_1-item\" style={{ width: \"25%\" }} key={i}>\r\n                                    <img src={item[\"img_address\"]} alt=\"\" />\r\n                                    <p>{item[\"label\"]}</p>\r\n                                </a>\r\n                            )\r\n                        })\r\n                    }\r\n                </section>\r\n            </div>\r\n        </EnteryNormal>\r\n    )\r\n}\r\n\r\nEntryTab.propTypes = {\r\n    changePanelStateDispatch: PropTypes.func,\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.arrayOf(PropTypes.shape({\r\n        label: PropTypes.string,\r\n        img_address: PropTypes.string,\r\n        link_address: PropTypes.string\r\n    }))\r\n}\r\n\r\nexport default React.memo(EntryTab);","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\tags\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\upload\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\carousel\\index.jsx",["384"],"import { Carousel } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nfunction carousel(props) {\r\n\r\n    const { \r\n        changePanelStateDispatch, \r\n        children,\r\n        id,\r\n        template,\r\n        left_editor,\r\n        index\r\n    } = props\r\n\r\n    return (\r\n        <div className=\"carousel-content\" id={id} data-index={index} onClick={()=>{\r\n            changePanelStateDispatch([left_editor,template],index);\r\n        }}>\r\n            <Carousel autoplay>\r\n                {\r\n                    children.map((item,i)=>{\r\n                        return (\r\n                            <div key={i}>\r\n                                <a>\r\n                                    <img src={item[\"img_address\"]} alt={i+1} width=\"375\" height=\"140\" />\r\n                                </a>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </Carousel>\r\n        </div>  \r\n    )\r\n}\r\n\r\ncarousel.propTypes = {\r\n    changePanelStateDispatch: PropTypes.func,\r\n    children: PropTypes.arrayOf(PropTypes.shape({\r\n        img_address: PropTypes.string.isRequired,\r\n        link_address: PropTypes.string,\r\n    })),\r\n    id: PropTypes.string.isRequired,\r\n    template: PropTypes.string.isRequired,\r\n    left_editor: PropTypes.string.isRequired\r\n}\r\n\r\nexport default React.memo(carousel);","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\com_step\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\com_button\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\gridList2\\index.jsx",["385","386","387","388","389","390","391","392","393","394","395","396","397","398","399"],"import React from 'react'\r\nimport cx from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport './style.sass'\r\n\r\nconst Card1 = (props) => {\r\n    const { tag, img_address, title, subtitle } = props\r\n    return (\r\n        <a className=\"fd-link fd-card shadowMode comp_list_card_1\">\r\n            <div className=\"fd-card-inner\">\r\n                <div className=\"fd-card-inner-head\">\r\n                    <a className=\"fd-link fd-jumbo size-lg\">\r\n                        <a className=\"fd-link fd-cover fd-jumbo-cover\" style={{ backgroundImage: \"url(\"+img_address+\")\" }}></a>\r\n                        <div className=\"fd-jumbo-mask\"></div>\r\n                        <div className=\"fd-jumbo-content\"></div>\r\n                        <div className=\"fd-jumbo-tag\">\r\n                            <label htmlFor=\"\">{tag}</label>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <div className=\"fd-card-inner-body\">\r\n                    <h1 className=\"fd-title\">{title}</h1>\r\n                </div>\r\n                <div className=\"fd-card-inner-tail\">\r\n                    <p className=\"fd-desc\">{subtitle}</p>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nconst Card2 = (props) => {\r\n    const { tag, img_address, title, subtitle } = props\r\n    return (\r\n        <a className=\"fd-link fd-card comp_list_card_2\">\r\n            <div className=\"fd-card-inner\">\r\n                <div className=\"fd-card-inner-head\">\r\n                    <a className=\"fd-link fd-jumbo size-lg\">\r\n                        <a className=\"fd-link fd-cover fd-jumbo-cover\" style={{ backgroundImage: \"url(\"+img_address+\")\" }}></a>\r\n                        <div className=\"fd-jumbo-mask\"></div>\r\n                        <div className=\"fd-jumbo-content\">\r\n                        </div>\r\n                        <div className=\"fd-jumbo-tag\">\r\n                            <label htmlFor=\"\">{tag}</label>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <div className=\"fd-card-inner-body\">\r\n                    <h1 className=\"fd-title\">{title}</h1>\r\n                </div>\r\n                <div className=\"fd-card-inner-tail\">\r\n                    <p className=\"fd-desc\">{subtitle}</p>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nconst Grid2 = (props) => {\r\n\r\n    const { imgUrl, tag, title, desc } = props\r\n\r\n    return (\r\n        <a className=\"fd-link comp_list_grid_1-jumbo\">\r\n            <a className=\"fd-link fd-jumbo size-md\">\r\n                <a className=\"fd-link fd-cover fd-jumbo-cover\" style={{ backgroundImage: \"url(\" + imgUrl + \")\" }}></a>\r\n                <div className=\"fd-jumbo-mask\"></div>\r\n                <div className=\"fd-jumbo-content\">\r\n                </div>\r\n                <div className=\"fd-jumbo-tag\">\r\n                    <label htmlFor=\"\">{tag}</label>\r\n                </div>\r\n            </a>\r\n            <h1 className=\"fd-title line-cut-1 comp_list_grid_3-item-title\">{title}</h1>\r\n            <p className=\"fd-desc line-cut-1 comp_list_grid_3-item-desc\">{desc}</p>\r\n        </a>\r\n    )\r\n}\r\n\r\nconst Grid1 = (props) => {\r\n\r\n    const { imgUrl, title, desc } = props\r\n\r\n    return (\r\n        <a className=\"fd-link fd-jumbo size-md comp_list_grid_1-jumbo\">\r\n            <a className=\"fd-link fd-cover fd-jumbo-cover\" style={{ backgroundImage: \"url(\" + imgUrl + \")\" }}></a>\r\n            <div className=\"fd-jumbo-mask\"></div>\r\n            <div className=\"fd-jumbo-content\">\r\n                <h1>{title}</h1>\r\n                <p>{desc}</p>\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nfunction GridList2(props) {\r\n\r\n    const {\r\n        changePanelStateDispatch,\r\n        template,\r\n        id,\r\n        index,\r\n        children,\r\n        tag,\r\n        img_address,\r\n        left_editor,\r\n        title,\r\n        subtitle\r\n    } = props\r\n\r\n    return (\r\n        <div className=\"use-tag\" id={id} data-index={index} style={{ position: \"relative\" }} onClick={() => {\r\n            changePanelStateDispatch([left_editor,template],index)\r\n        }}>\r\n            {\r\n                template === 'cardlist2' ?\r\n                <Card2\r\n                    tag={tag}\r\n                    img_address={img_address}\r\n                    title={title}\r\n                    subtitle={subtitle}\r\n                /> :\r\n                template === 'cardlist1' ?\r\n                <Card1 \r\n                    tag={tag}\r\n                    img_address={img_address}\r\n                    title={title}\r\n                    subtitle={subtitle}\r\n                /> :\r\n                <div className={cx(\"fd-grid\", {\r\n                    \"comp_list_grid_3\": template === 'gridlist2' ? true : false,\r\n                    \"comp_list_grid_1\": template === 'gridlist1' ? true : false\r\n                })}>\r\n                    {\r\n                        children.map((item, i) => {\r\n                            return (\r\n                                <div className=\"fd-grid-row\" key={i}>\r\n                                    {\r\n                                        item.children.map((item2, j) => {\r\n                                            return (\r\n                                                <div className=\"fd-grid-col\" key={j}>\r\n                                                    {\r\n                                                        template === 'gridlist2' ?\r\n                                                            <Grid2\r\n                                                                imgUrl={item2.img_address}\r\n                                                                tag={item2.tag}\r\n                                                                title={item2.title}\r\n                                                                desc={item2.subtitle}\r\n                                                            /> :\r\n                                                            template === 'gridlist1' ?\r\n                                                            <Grid1\r\n                                                                imgUrl={item2.img_address}\r\n                                                                title={item2.title}\r\n                                                                desc={item2.subtitle}\r\n                                                            /> : ''\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nGridList2.propTypes = {\r\n    changePanelStateDispatch: PropTypes.func,\r\n    id: PropTypes.string.isRequired,\r\n    // children: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\r\n    //     title: PropTypes.string,\r\n    //     subtitle: PropTypes.string,\r\n    //     tag: PropTypes.string,\r\n    //     img_address: PropTypes.string\r\n    // }))),\r\n    tag: PropTypes.string,\r\n    title: PropTypes.string,\r\n    img_address: PropTypes.string,\r\n    subtitle: PropTypes.string\r\n}\r\n\r\nexport default React.memo(GridList2)","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\com_footer\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\com_faq\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\quote\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\com_img\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\gridList\\index.jsx",["400"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './style.sass'\r\n\r\nconst GridCol = (props) => {\r\n    const { arr } = props\r\n    return (\r\n        arr.children.map((item2, j) => {\r\n            return (\r\n                <div className=\"fd-grid-col\" key={j}>\r\n                    <a className=\"fd-link comp_list_grid_5-item\">\r\n                        <div className=\"fd-link fd-jumbo size-sm\">\r\n                            <div className=\"fd-link fd-cover fd-jumbo-cover\" style={{ backgroundImage: \"url(\"+item2.img_address+\")\" }}></div>\r\n                            <div className=\"fd-jumbo-mask\"></div>\r\n                            <div className=\"fd-jumbo-content\">\r\n                                <h1 className=\"fd-title line-cut-1 comp_list_grid_5-item-title\">\r\n                                    {item2.title}\r\n                                </h1>\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nfunction GridList(props) {\r\n\r\n    const {\r\n        changePanelStateDispatch,\r\n        template,\r\n        left_editor,\r\n        id,\r\n        index,\r\n        children\r\n    } = props\r\n\r\n    return (\r\n        <div className=\"use-tag\" id={id} data-index={index} style={{ position: \"relative\" }} onClick={() => {\r\n            changePanelStateDispatch([left_editor,template],index)\r\n        }}>\r\n            <div className=\"fd-grid comp_list_grid_5\">\r\n                {\r\n                    children.map((item, i) => {\r\n                        return (\r\n                            <div className=\"fd-grid-row\" key={i}>\r\n                                <GridCol\r\n                                    arr={item}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nGridList.propTypes = {\r\n    changePanelStateDispatch: PropTypes.func,\r\n    id: PropTypes.string.isRequired,\r\n    // children: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\r\n    //     tag: PropTypes.string,\r\n    //     img_address: PropTypes.string\r\n    // })))\r\n}\r\n\r\nexport default React.memo(GridList)","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\newList\\index.jsx",["401","402"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './style.sass'\r\n\r\nfunction NewList(props) {\r\n\r\n    const {\r\n        changePanelStateDispatch,\r\n        template,\r\n        id,\r\n        index,\r\n        title,\r\n        img_address,\r\n        left_editor,\r\n        tag\r\n    } = props\r\n\r\n    return (\r\n        <div className=\"use-tag\" id={id} data-index={index} style={{ position: \"relative\" }} onClick={() => {\r\n            changePanelStateDispatch([left_editor,template],index)\r\n        }}>\r\n            <div>\r\n                <div className=\"fd-link fd-card comp_list_news_v_3\">\r\n                    <div className=\"fd-card-inner\">\r\n                        <div className=\"fd-card-inner-head\">\r\n                            <h1 className=\"fd-title title\">{title}</h1>\r\n                        </div>\r\n                        <div className=\"fd-card-inner-body\">\r\n                            <div className=\"fd-grid gutter-sm\">\r\n                                {\r\n                                    img_address.map((_, i) => {\r\n                                        return (\r\n                                            <div className=\"fd-grid-row\" key={i}>\r\n                                                {\r\n                                                    _.map((item, j) => {\r\n                                                        return (\r\n                                                            <div className=\"fd-grid-col\" key={j}>\r\n                                                                <a className=\"fd-link fd-cover cover\" style={{ backgroundImage: \"url(\" + item + \")\" }}></a>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"fd-card-inner-tail\">\r\n                            <span className=\"fd-tag-list undefined\">\r\n                                {\r\n                                    tag.map((item,k)=>{\r\n                                        return (\r\n                                            <label key={k}>\r\n                                                <p className=\"fd-desc sub\">{item}</p>\r\n                                            </label>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nNewList.propTypes = {\r\n    changePanelStateDispatch: PropTypes.func,\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string,\r\n    img_address: PropTypes.array,\r\n    tag: PropTypes.array\r\n}\r\n\r\nexport default React.memo(NewList)","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\paragraph\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\normalList\\index.jsx",["403"],"import React from 'react'\r\nimport cx from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport './style.sass'\r\n\r\nfunction NormalList(props) {\r\n\r\n    const { \r\n        changePanelStateDispatch,       \r\n        template,\r\n        id,\r\n        index,\r\n        left_editor,\r\n        title,\r\n        img_address,\r\n        tag\r\n    } = props\r\n\r\n    return (\r\n        <div className=\"use-tag\" id={id} data-index={index} style={{position:\"relative\"}} onClick={()=>{\r\n            changePanelStateDispatch([left_editor,template],index)\r\n        }}>\r\n            <div>\r\n                <a className={cx(\"fd-link fd-subject comp_list_normal_2\",{\"reverse\": template === 'normal3' ? true : false})}>\r\n                    <div className={cx(\"fd-subject-cover\",{\"hide\": template === 'normal1' ? true : false})} style={{backgroundImage:'url('+img_address+')'}}></div>\r\n                    <div className=\"fd-subject-content\">\r\n                        <div>\r\n                            <h1 className=\"fd-title title\">{title}</h1>\r\n                            <span className=\"fd-tag-list\">\r\n                                {\r\n                                    tag.map((item,i)=>{\r\n                                        return (\r\n                                            <label key={i}>\r\n                                                <p className=\"fd-desc\">{item}</p>\r\n                                            </label>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nNormalList.propTypes = {\r\n    changePanelStateDispatch: PropTypes.func,\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string,\r\n    tag: PropTypes.array,\r\n    img_address:PropTypes.string\r\n}\r\n\r\nexport default React.memo(NormalList)","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\title\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\cutList\\index.jsx",["404"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './style.sass'\r\n\r\nfunction CutList(props) {\r\n\r\n    const { \r\n        changePanelStateDispatch,\r\n        template,\r\n        id,\r\n        index,\r\n        title,\r\n        img_address,\r\n        left_editor,\r\n        desc\r\n    } = props\r\n\r\n    return (\r\n        <div className=\"use-tag\" id={id} data-index={index} style={{position:\"relative\"}} onClick={()=>{\r\n            changePanelStateDispatch([left_editor,template],index)\r\n        }}>\r\n            <div>\r\n                <a className=\"fd-link comp_list_news_h_6\">\r\n                    {\r\n                        template === 'cutlist1' ? \r\n                        <h1 className=\"fd-title sub line-cut-1 comp_list_news_h_6-title\">\r\n                            {title}\r\n                        </h1> : ''\r\n                    }\r\n                    <div className=\"fd-link fd-subject no-action rect-cover reverse comp_list_news_h_6-subject\">\r\n                        <div className=\"fd-subject-cover\" style={{backgroundImage:\"url(\"+img_address+\")\"}}></div>\r\n                        <div className=\"fd-subject-content\">\r\n                            {\r\n                                template === 'cutlist2' ? \r\n                                <h1 className=\"fd-title sub line-cut-2 title\">\r\n                                    {title}\r\n                                </h1> : template === 'cutlist1' ?\r\n                                <p className=\"fd-desc sub line-cut-3 comp_list_news_h_6-desc\">{desc}</p> :\r\n                                \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCutList.propTypes = {\r\n    changePanelStateDispatch: PropTypes.func,\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string,\r\n    img_address: PropTypes.string,\r\n    desc: PropTypes.string\r\n}\r\n\r\nexport default React.memo(CutList)","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\banner\\index.jsx",["405"],"import React from 'react';\r\nimport './index.sass';\r\nimport cx from 'classnames';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Banner(props) {\r\n    \r\n    const { \r\n        changePanelStateDispatch,\r\n        id,\r\n        img_address,\r\n        left_editor,\r\n        template,\r\n        index\r\n    } = props\r\n    return (\r\n        <div className={cx(\"banner\",props.className)} id={id} data-index={index} onClick={()=>{\r\n            changePanelStateDispatch([left_editor,template],index);\r\n        }}>\r\n            <a>\r\n                <img src={img_address} alt=\"\"/>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nBanner.propTypes = {\r\n    changePanelStateDispatch: PropTypes.func,\r\n    type: PropTypes.string,\r\n    img_address: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Banner\r\n","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\operationList\\index.jsx",["406"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\nimport './style.sass'\r\n\r\nfunction OperationList(props) {\r\n\r\n    const { \r\n        changePanelStateDispatch,\r\n        template,\r\n        id,\r\n        index,\r\n        title,\r\n        tag,\r\n        area,\r\n        img_address,\r\n        left_editor,\r\n        btn\r\n    } = props\r\n\r\n    return (\r\n        <div className=\"use-tag\" id={id} data-index={index} style={{position:'relative'}} onClick={()=>{\r\n            changePanelStateDispatch([left_editor,template],index)\r\n        }}>\r\n            <div>\r\n                <a className=\"fd-link fd-subject comp_list_operation_1\">\r\n                    <div className={cx({\"fd-subject-cover\":template === 'opt1' ? false : true})} style={{backgroundImage:\"url(\"+img_address+\")\"}}></div>\r\n                    <div className=\"fd-subject-content\">\r\n                        <div>\r\n                            <h1 className=\"fd-title title\">{title}</h1>\r\n                            <span className=\"fd-tag-list tag-list\">\r\n                                {\r\n                                    tag.map((item,i)=>{\r\n                                        return (\r\n                                            <label key={i}>\r\n                                                <p className=\"fd-desc\" style={{color:\"rgb(252,101,101)\"}}>{item}</p>\r\n                                            </label>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </span>\r\n                            <p className=\"fd-desc desc\">{area}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"fd-subject-action\">\r\n                        <button className=\"fd-button\">{btn}</button>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nOperationList.propTypes = {\r\n    changePanelStateDispatch: PropTypes.func,\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string,\r\n    tag: PropTypes.array,\r\n    area: PropTypes.string,\r\n    img_address: PropTypes.string,\r\n    btn: PropTypes.string\r\n}\r\n\r\nexport default React.memo(OperationList)","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\rowList\\index.jsx",["407"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './style.sass'\r\n\r\nfunction RowList(props) {\r\n\r\n    const { \r\n        changePanelStateDispatch,\r\n        template,\r\n        id,\r\n        index,\r\n        children,\r\n        left_editor\r\n    } = props\r\n\r\n    return (\r\n        <div className=\"use-tag\" id={id} data-index={index} style={{position:\"relative\"}} onClick={()=>{\r\n            changePanelStateDispatch([left_editor,template],index)\r\n        }}>\r\n            <div className=\"fd-grid comp_list_v_1\">\r\n                {\r\n                    children.map((item,i)=>{\r\n                        return (\r\n                            <div className=\"fd-grid-row\" key={i}>\r\n                                <div className=\"fd-grid-col\">\r\n                                    <div className=\"fd-link fd-jumbo size-mdx comp_list_v_1-jumbo\">\r\n                                        <a \r\n                                            href=\"\" \r\n                                            className=\"fd-link fd-cover fd-jumbo-cover\"\r\n                                            style={{backgroundImage:'url('+item.img_address+')'}}\r\n                                        >\r\n                                        </a>\r\n                                        <div className=\"fd-jumbo-mask\"></div>\r\n                                        <div className=\"fd-jumbo-content\">{item.title}</div>\r\n                                        <div className=\"fd-jumbo-tag\">\r\n                                            <label htmlFor=\"\">{item.tag}</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nRowList.propTypes = {\r\n    changePanelStateDispatch: PropTypes.func,\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.arrayOf(PropTypes.shape({\r\n        link_address: PropTypes.string,\r\n        img_address: PropTypes.string,\r\n        title: PropTypes.string,\r\n        tag: PropTypes.string\r\n    }))\r\n}\r\n\r\nexport default React.memo(RowList)","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\link_address\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\header\\index.jsx",["408","409","410"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport cx from \"classnames\";\r\nimport \"./style.sass\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={cx(\"instance-container\",\"instance-container__header\",\r\n            {\r\n                \"instance-container--active\":false\r\n            })} style={{width:\"375px\"}}>\r\n            <div style={{position:\"relative\"}}>\r\n                <div className=\"yemianbiaoti\" style={{background:\"rgb(255,255,255)\"}}>\r\n                    <div className=\"yemianbiaoti__return\"><i className=\"icon iconfont\">&#xe749;</i></div>\r\n                    <div className=\"yemianbiaoti__title\">\r\n                        <span className=\"title-name\" style={{color:\"rgb(0,0,0)\"}}>test</span>\r\n                    </div>\r\n                    <div className=\"yemianbiaoti__icon-container\">\r\n                        <div>\r\n                            <div className=\"yemianbiaoti__icon yemianbiaoti__icon--cart\"><i className=\"icon iconfont\">&#xe760;</i></div>\r\n                            <div className=\"yemianbiaoti__icon yemianbiaoti__icon--ellipsis\"><i className=\"icon iconfont\">&#xe77e;</i></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\loucengbiaoti\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\advert_list\\index.jsx",["411","412","413","414","415"],"import \"./index.sass\";\r\n\r\nfunction AdvertList() {\r\n    return (\r\n        <div className=\"advtop\">\r\n            <ul>\r\n                <li>\r\n                    <a href=\"https://www.baidu.com\" target=\"_blank\">\r\n                        <img src=\"https://img.jj59.com/6/5a717afb6f4b.jpg\" alt=\"test\"/>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://www.baidu.com\" target=\"_blank\">\r\n                        <img src=\"https://img.jj59.com/6/5a717afb6f4b.jpg\" alt=\"test\"/>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://www.baidu.com\" target=\"_blank\">\r\n                        <img src=\"https://img.jj59.com/6/5a717afb6f4b.jpg\" alt=\"test\"/>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://www.baidu.com\" target=\"_blank\">\r\n                        <img src=\"https://img.jj59.com/6/5a717afb6f4b.jpg\" alt=\"test\"/>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://www.baidu.com\" target=\"_blank\">\r\n                        <img src=\"https://img.jj59.com/6/5a717afb6f4b.jpg\" alt=\"test\"/>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvertList;","D:\\毕业设计\\毕业设计\\graduationProject\\src\\components\\loucengjiange\\index.jsx",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\application\\User\\index.jsx",["416","417"],"import React, { useState } from 'react'\r\nimport style from './style.module.sass'\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nfunction User() {\r\n    const [collapsed, setCollapsed] = useState(false)\r\n\r\n    const onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        setCollapsed(collapsed);\r\n    };\r\n\r\n    return (\r\n        <Layout style={{height:\"100vh\"}}>\r\n            <Header className={style.header}>\r\n                <div className={style.logo} />\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n                    <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n                    <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n            <Layout>\r\n                <Sider width={200} className={style[\"site-layout-background\"]}>\r\n                    <Menu\r\n                        mode=\"inline\"\r\n                        defaultSelectedKeys={['1']}\r\n                        defaultOpenKeys={['sub1']}\r\n                        style={{ height: '100%', borderRight: 0 }}\r\n                    >\r\n                        <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"subnav 1\">\r\n                            <Menu.Item key=\"1\">option1</Menu.Item>\r\n                            <Menu.Item key=\"2\">option2</Menu.Item>\r\n                            <Menu.Item key=\"3\">option3</Menu.Item>\r\n                            <Menu.Item key=\"4\">option4</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"subnav 2\">\r\n                            <Menu.Item key=\"5\">option5</Menu.Item>\r\n                            <Menu.Item key=\"6\">option6</Menu.Item>\r\n                            <Menu.Item key=\"7\">option7</Menu.Item>\r\n                            <Menu.Item key=\"8\">option8</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"subnav 3\">\r\n                            <Menu.Item key=\"9\">option9</Menu.Item>\r\n                            <Menu.Item key=\"10\">option10</Menu.Item>\r\n                            <Menu.Item key=\"11\">option11</Menu.Item>\r\n                            <Menu.Item key=\"12\">option12</Menu.Item>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout style={{ padding: '0 24px 24px' }}>\r\n                    <Breadcrumb style={{ margin: '16px 0' }}>\r\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <Content\r\n                        className={style[\"site-layout-background\"]}\r\n                        style={{\r\n                            padding: 24,\r\n                            margin: 0,\r\n                            minHeight: 280,\r\n                        }}\r\n                    >\r\n                        Content\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default User;","D:\\毕业设计\\毕业设计\\graduationProject\\src\\application\\Login\\index.jsx",["418","419"],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\application\\Register\\index.jsx",["420","421"],"import React from 'react';\r\nimport { Form, Input, Row, Col, Checkbox, Button, message } from 'antd';\r\nimport { registerRequest } from 'src/api/request'\r\nimport './style.sass'\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nconst RegistrationForm = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n        registerRequest(values).then(res => {\r\n            console.log(res,'?????')\r\n            if(res.status == 200) {\r\n                message.info(res.message);\r\n            }else {\r\n                message.success(res)\r\n                props.history.push('/login')\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <div className=\"register-content\">\r\n                <Form\r\n                    {...formItemLayout}\r\n                    form={form}\r\n                    name=\"register\"\r\n                    onFinish={onFinish}\r\n                    initialValues={{\r\n                        residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                        prefix: '86',\r\n                    }}\r\n                    scrollToFirstError\r\n                >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        label=\"Username\"\r\n                        tooltip=\"What do you want others to call you?\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                        hasFeedback\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Confirm Password\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please confirm your password!',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n\r\n                                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n                        <Row gutter={8}>\r\n                            <Col span={12}>\r\n                                <Form.Item\r\n                                    name=\"captcha\"\r\n                                    noStyle\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input the captcha you got!',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Button>Get captcha</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"agreement\"\r\n                        valuePropName=\"checked\"\r\n                        rules={[\r\n                            {\r\n                                validator: (_, value) =>\r\n                                    value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n                            },\r\n                        ]}\r\n                        {...tailFormItemLayout}\r\n                    >\r\n                        <Checkbox>\r\n                            I have read the <a href=\"\">agreement</a>\r\n                        </Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item {...tailFormItemLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            注册\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\actions\\useraction.js",[],"D:\\毕业设计\\毕业设计\\graduationProject\\src\\store\\reducers\\userreducer.js",["422"],{"ruleId":"423","replacedBy":"424"},{"ruleId":"425","replacedBy":"426"},{"ruleId":"427","severity":1,"message":"428","line":18,"column":1,"nodeType":"429","endLine":47,"endColumn":2},{"ruleId":"430","severity":1,"message":"431","line":17,"column":34,"nodeType":"432","messageId":"433","endLine":17,"endColumn":36},{"ruleId":"427","severity":1,"message":"434","line":7,"column":1,"nodeType":"429","endLine":14,"endColumn":2},{"ruleId":"427","severity":1,"message":"434","line":10,"column":1,"nodeType":"429","endLine":23,"endColumn":2},{"ruleId":"427","severity":1,"message":"434","line":9,"column":1,"nodeType":"429","endLine":18,"endColumn":2},{"ruleId":"435","severity":1,"message":"436","line":130,"column":8,"nodeType":"437","endLine":130,"endColumn":59,"suggestions":"438"},{"ruleId":"435","severity":1,"message":"439","line":134,"column":8,"nodeType":"437","endLine":134,"endColumn":49,"suggestions":"440"},{"ruleId":"435","severity":1,"message":"441","line":45,"column":8,"nodeType":"437","endLine":45,"endColumn":17,"suggestions":"442"},{"ruleId":"443","severity":1,"message":"444","line":5,"column":11,"nodeType":"445","messageId":"446","endLine":5,"endColumn":14},{"ruleId":"447","severity":1,"message":"448","line":46,"column":2,"nodeType":"449","messageId":"450","endLine":46,"endColumn":10},{"ruleId":"451","severity":1,"message":"452","line":82,"column":33,"nodeType":"453","endLine":82,"endColumn":77},{"ruleId":"451","severity":1,"message":"452","line":88,"column":13,"nodeType":"453","endLine":88,"endColumn":57},{"ruleId":"451","severity":1,"message":"452","line":70,"column":13,"nodeType":"453","endLine":70,"endColumn":57},{"ruleId":"451","severity":1,"message":"452","line":72,"column":13,"nodeType":"453","endLine":72,"endColumn":57},{"ruleId":"451","severity":1,"message":"452","line":99,"column":13,"nodeType":"453","endLine":99,"endColumn":57},{"ruleId":"451","severity":1,"message":"452","line":73,"column":13,"nodeType":"453","endLine":73,"endColumn":57},{"ruleId":"451","severity":1,"message":"452","line":75,"column":13,"nodeType":"453","endLine":75,"endColumn":57},{"ruleId":"451","severity":1,"message":"452","line":17,"column":21,"nodeType":"453","endLine":17,"endColumn":55},{"ruleId":"451","severity":1,"message":"452","line":56,"column":33,"nodeType":"453","endLine":56,"endColumn":106},{"ruleId":"451","severity":1,"message":"452","line":25,"column":33,"nodeType":"453","endLine":25,"endColumn":36},{"ruleId":"451","severity":1,"message":"452","line":9,"column":9,"nodeType":"453","endLine":9,"endColumn":68},{"ruleId":"451","severity":1,"message":"452","line":12,"column":21,"nodeType":"453","endLine":12,"endColumn":61},{"ruleId":"454","severity":1,"message":"455","line":13,"column":25,"nodeType":"453","endLine":13,"endColumn":124},{"ruleId":"451","severity":1,"message":"452","line":13,"column":25,"nodeType":"453","endLine":13,"endColumn":124},{"ruleId":"451","severity":1,"message":"452","line":35,"column":9,"nodeType":"453","endLine":35,"endColumn":57},{"ruleId":"451","severity":1,"message":"452","line":38,"column":21,"nodeType":"453","endLine":38,"endColumn":61},{"ruleId":"454","severity":1,"message":"455","line":39,"column":25,"nodeType":"453","endLine":39,"endColumn":124},{"ruleId":"451","severity":1,"message":"452","line":39,"column":25,"nodeType":"453","endLine":39,"endColumn":124},{"ruleId":"451","severity":1,"message":"452","line":64,"column":9,"nodeType":"453","endLine":64,"endColumn":55},{"ruleId":"451","severity":1,"message":"452","line":65,"column":13,"nodeType":"453","endLine":65,"endColumn":53},{"ruleId":"454","severity":1,"message":"455","line":66,"column":17,"nodeType":"453","endLine":66,"endColumn":115},{"ruleId":"451","severity":1,"message":"452","line":66,"column":17,"nodeType":"453","endLine":66,"endColumn":115},{"ruleId":"451","severity":1,"message":"452","line":85,"column":9,"nodeType":"453","endLine":85,"endColumn":72},{"ruleId":"454","severity":1,"message":"455","line":86,"column":13,"nodeType":"453","endLine":86,"endColumn":111},{"ruleId":"451","severity":1,"message":"452","line":86,"column":13,"nodeType":"453","endLine":86,"endColumn":111},{"ruleId":"451","severity":1,"message":"452","line":11,"column":21,"nodeType":"453","endLine":11,"endColumn":66},{"ruleId":"454","severity":1,"message":"455","line":38,"column":65,"nodeType":"453","endLine":38,"endColumn":152},{"ruleId":"451","severity":1,"message":"452","line":38,"column":65,"nodeType":"453","endLine":38,"endColumn":152},{"ruleId":"451","severity":1,"message":"452","line":24,"column":17,"nodeType":"453","endLine":24,"endColumn":127},{"ruleId":"451","severity":1,"message":"452","line":23,"column":17,"nodeType":"453","endLine":23,"endColumn":59},{"ruleId":"451","severity":1,"message":"452","line":20,"column":13,"nodeType":"453","endLine":20,"endColumn":16},{"ruleId":"451","severity":1,"message":"452","line":26,"column":17,"nodeType":"453","endLine":26,"endColumn":73},{"ruleId":"451","severity":1,"message":"456","line":27,"column":41,"nodeType":"453","endLine":31,"endColumn":42},{"ruleId":"443","severity":1,"message":"457","line":1,"column":17,"nodeType":"445","messageId":"446","endLine":1,"endColumn":28},{"ruleId":"443","severity":1,"message":"458","line":1,"column":30,"nodeType":"445","messageId":"446","endLine":1,"endColumn":38},{"ruleId":"443","severity":1,"message":"459","line":1,"column":40,"nodeType":"445","messageId":"446","endLine":1,"endColumn":49},{"ruleId":"460","severity":1,"message":"461","line":8,"column":21,"nodeType":"453","messageId":"462","endLine":8,"endColumn":69,"fix":"463"},{"ruleId":"460","severity":1,"message":"461","line":13,"column":21,"nodeType":"453","messageId":"462","endLine":13,"endColumn":69,"fix":"464"},{"ruleId":"460","severity":1,"message":"461","line":18,"column":21,"nodeType":"453","messageId":"462","endLine":18,"endColumn":69,"fix":"465"},{"ruleId":"460","severity":1,"message":"461","line":23,"column":21,"nodeType":"453","messageId":"462","endLine":23,"endColumn":69,"fix":"466"},{"ruleId":"460","severity":1,"message":"461","line":28,"column":21,"nodeType":"453","messageId":"462","endLine":28,"endColumn":69,"fix":"467"},{"ruleId":"443","severity":1,"message":"468","line":10,"column":12,"nodeType":"445","messageId":"446","endLine":10,"endColumn":21},{"ruleId":"443","severity":1,"message":"469","line":12,"column":11,"nodeType":"445","messageId":"446","endLine":12,"endColumn":21},{"ruleId":"470","severity":1,"message":"471","line":26,"column":31,"nodeType":"472","messageId":"450","endLine":26,"endColumn":33},{"ruleId":"451","severity":1,"message":"456","line":92,"column":29,"nodeType":"453","endLine":92,"endColumn":40},{"ruleId":"470","severity":1,"message":"471","line":44,"column":27,"nodeType":"472","messageId":"450","endLine":44,"endColumn":29},{"ruleId":"451","severity":1,"message":"456","line":156,"column":45,"nodeType":"453","endLine":156,"endColumn":56},{"ruleId":"427","severity":1,"message":"434","line":8,"column":1,"nodeType":"429","endLine":15,"endColumn":2},"no-native-reassign",["473"],"no-negated-in-lhs",["474"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addTemplate2', 'addTemplateDispatch', and 'index'. Either include them or remove the dependency array.","ArrayExpression",["475"],"React Hook useEffect has a missing dependency: 'Dustbin'. Either include it or remove the dependency array.",["476"],"React Hook useEffect has a missing dependency: 'getUserTplData'. Either include it or remove the dependency array.",["477"],"no-unused-vars","'tag' is assigned a value but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'Carousel'.","ObjectExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useCallback' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"478","text":"479"},{"range":"480","text":"479"},{"range":"481","text":"479"},{"range":"482","text":"479"},{"range":"483","text":"479"},"'collapsed' is assigned a value but never used.","'onCollapse' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation",{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},[206,206]," rel=\"noreferrer\"",[436,436],[666,666],[896,896],[1126,1126],"Update the dependencies array to be: [tipHeight, currentTemplate, uuId, showAdd, comp_i, addTemplate2, index, addTemplateDispatch]",{"range":"490","text":"491"},"Update the dependencies array to be: [currentTemplate, showAdd, pageData, pid, Dustbin]",{"range":"492","text":"493"},"Update the dependencies array to be: [getUserTplData, pUpdate]",{"range":"494","text":"495"},[5143,5194],"[tipHeight, currentTemplate, uuId, showAdd, comp_i, addTemplate2, index, addTemplateDispatch]",[5248,5289],"[currentTemplate, showAdd, pageData, pid, Dustbin]",[1331,1340],"[getUserTplData, pUpdate]"]